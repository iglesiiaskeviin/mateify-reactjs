{"version":3,"sources":["components/loginHeader.js","components/loggedHeader.js","components/authError.js","pages/login.js","pages/homePage.js","App.js","serviceWorker.js","index.js"],"names":["LoginHeader","props","class","className","src","CoLogoImg","alt","CoName","LoggedHeader","action","userPhoto","ErrorAutentication","srcset","React","Component","LoginForm","useState","email","password","state","setState","history","useHistory","change","e","target","name","value","type","placeholder","onChange","Button","variant","color","onClick","preventDefault","userExitsArray","Data","filter","element","length","push","uuid","alert","selected","style","borderRadius","fontSize","fontFamily","fontWeight","HomePage","useParams","inputValue","setInputValue","filterList","setFilterList","filterListMusic","music","console","log","includes","userArrayImg","profilePictureUrl","onKeyPress","key","results","MusicData","scope","map","songs","artist","album","duration","songData","handleAddMusic","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fe63fb31.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport const LoginHeader = props => {\r\n    return (\r\n        <nav class=\"login-navbar navbar text-center\">\r\n            <div className=\"col-12\">\r\n                <div className=\"cointainer header-cont p-1\">\r\n                    <img className=\"maitefy_logo\" src={props.CoLogoImg} alt=\"MateifyLogo\"/><h1 className=\"mateify-h1\">{props.CoName}</h1>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport UserImg from '../databases/userData.json';\r\n\r\nexport const LoggedHeader = props => {\r\n    return (\r\n        <nav class=\"navbar justify-content-between login-navbar\">\r\n            <img className=\"user-photo\" src=\"https://cdn.discordapp.com/attachments/702899679947522121/714933469796499567/LogoSoloBlancoFondoTransparente.png\" alt=\"\"/>\r\n            <h1 className=\"mateify-h1\">Mateify</h1>\r\n            <form action=\"\" className=\"in-line\">\r\n                <img className=\"user-photo\" src={props.userPhoto} alt=\"\"/>\r\n            </form>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport {LoginHeader} from '../components/loginHeader.js';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\n\r\nclass ErrorAutentication extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                \r\n                <LoginHeader CoName=\"Mateify\" CoLogoImg=\"https://cdn.discordapp.com/attachments/702899679947522121/714933469796499567/LogoSoloBlancoFondoTransparente.png\"/>\r\n                <div className=\"col abs-center\">\r\n                    <div className=\"col-xs\">\r\n                         <img src=\"https://cdn.discordapp.com/attachments/406536989811146784/744841536063406230/padlock.png\" alt=\"\" srcset=\"\"/>\r\n                    </div>\r\n                    <div className=\"col-xs text-center error-container\">\r\n                        <h1>MMM... algo no salió bien</h1>\r\n                        <p>Debes estar autenticado para acceder a esta página</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorAutentication;","import React, { useState } from 'react';\r\n/* COMPONENTS */\r\nimport {LoginHeader} from '../components/loginHeader.js';\r\nimport {LoggedHeader} from '../components/loggedHeader.js';\r\nimport ErrorAutentication from '../components/authError.js';\r\n/* ASSETS */\r\nimport {Button} from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n/* DB */\r\nimport Data from '.././databases/userData.json';\r\n\r\nconst LoginForm = () => {\r\n\r\n    const [state, setState] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n\r\n    const history = useHistory();\r\n    \r\n      \r\n\r\n    const change = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const userExits = (element) => {\r\n            if (element.email === state.email && element.password === state.password) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    const userExitsArray = Data.filter(userExits);\r\n    \r\n    if(userExitsArray.length > 0){\r\n        history.push(`/plyCreator/${userExitsArray[0].uuid}`)\r\n    }else{\r\n        alert(\"Usuario y/o contraseña incorrectos\")\r\n        /* history.push(`/authError`) */\r\n    }\r\n\r\n    \r\n    \r\n    }\r\n    return (\r\n    <div className=\"col-xs\">\r\n        <LoginHeader CoName=\"Mateify\" CoLogoImg=\"https://cdn.discordapp.com/attachments/702899679947522121/714933469796499567/LogoSoloBlancoFondoTransparente.png\"/>\r\n        <div className=\"col-12 abs-center\">\r\n            <form action=\"\" className=\"form col-lg-4 col-xs-12 login-form-control\">\r\n                <div className=\"col-12 p-5 text-center\">\r\n                    <img src=\"https://cdn.discordapp.com/attachments/406536989811146784/744841536063406230/padlock.png\" alt=\"\" srcset=\"\"/>\r\n                    <h1 className=\"logIn-h11\">Ingresar</h1>\r\n                </div>\r\n                <div className=\"form-group col-lg\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    name=\"email\"\r\n                    placeholder=\"Correo Electrónico\" \r\n                    value={state.email}\r\n                    onChange={change}\r\n                />\r\n                </div>\r\n                <div className=\"form-group col-lg\">\r\n                    <input \r\n                    type=\"password\" \r\n                    className=\"form-control\" \r\n                    name=\"password\"\r\n                    placeholder=\"Contraseña\" \r\n                    value={state.password} \r\n                    onChange={change}\r\n                    />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <div className=\"col-lg\">\r\n                    <Button \r\n                    variant=\"contained\" \r\n                    className=\"btn-create\" \r\n                    color=\"secondary\" \r\n                    type=\"submit\"\r\n                    onClick={onSubmit}\r\n                    >\r\n                    Comienza a crear playlists\r\n                    </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"my-4 text-center not-remember-pass-container\">\r\n                    <p>¿Has olvidado la contraseña?</p>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"col-12 my-4 text-center\">\r\n                    <p className=\"not-account\">¿No tienes cuenta?</p>\r\n                    <Button selected style={{\r\n                        borderRadius: 4,\r\n                        color: \"#009688\",\r\n                        fontSize: \"20\",\r\n                        fontFamily: 'Roboto',\r\n                        fontWeight: \"500\",\r\n                    }} \r\n                    variant=\"outlined\" \r\n                    type=\"submit\">\r\n                    REGISTRATE\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\n\r\nimport {LoggedHeader} from '../components/loggedHeader';\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n  /* DB */\r\nimport Data from '.././databases/userData.json';\r\nimport MusicData from '.././databases/songData.json';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { NotMusic } from '../components/notMusic.js';\r\n/* MATERIAL UI */\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nexport const HomePage = () => {\r\n\r\n        let { uuid } = useParams();\r\n\r\n        const history = useHistory();\r\n\r\n        const [inputValue, setInputValue] = useState(\"\")\r\n\r\n        const [filterList, setFilterList] = useState([])\r\n        \r\n        const [addMusic, setAddMusic] = useState([]);\r\n\r\n\r\n        const onChange = (e) => {\r\n            setInputValue(e.target.value)\r\n        }\r\n\r\n        const filterListMusic = (music) => {\r\n            console.log(\"Buscado en el input: \" + inputValue)\r\n            console.log(\"Canción: \"+music)\r\n            if (music.name.includes(inputValue)) {\r\n                return true;\r\n            }else{\r\n                return false;\r\n            }\r\n        }\r\n\r\n        const onInputKeyPress = (e) => {\r\n            if (e.key === 'Enter') {\r\n                const results = MusicData.filter(filterListMusic); \r\n                setFilterList(results);\r\n            }\r\n        } \r\n\r\n        const handleAddMusic = (e, songData) => {\r\n            console.log(\"Se ejecuta el handleAddMusic\");\r\n            console.log(songData);\r\n\r\n            \r\n            \r\n            \r\n\r\n            //add to user playlist \r\n          };\r\n\r\n        /*  */\r\n        const userImage = (e) => {\r\n            if (e.uuid) {\r\n                return true;\r\n            }else{\r\n                return false;\r\n            }\r\n        }\r\n        \r\n        const userArrayImg = Data.filter(userImage);\r\n\r\n\r\n        if (userArrayImg.length > 0) {\r\n            return  (\r\n                    <div>\r\n                    <LoggedHeader userPhoto={userArrayImg[0].profilePictureUrl}/>\r\n                    <div className=\"form-group col-xs p-5 flex-searchPly\">\r\n                    <div className=\"col-xs-12 col-lg-5\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            name=\"searchbar\"\r\n                            placeholder=\"Buscar\" \r\n                            onChange={onChange}\r\n                            onKeyPress={onInputKeyPress} \r\n                        />\r\n                        </div>\r\n                    </div>\r\n                    {/* tu playlist search */}\r\n                    <div className=\"container\">\r\n                        <p className=\"search-yourPly text-left mx-3\">Resultados</p>\r\n                        <div className=\"col-lg\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col-12\">Nombre</th>\r\n                                        <th scope=\"col-12\">Artista</th>\r\n                                        <th scope=\"col-12\">Álbum</th>\r\n                                        <th scope=\"col-12\">Duración</th>\r\n                                        <th scope=\"col-12\">Agregar</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {filterList.map((songs) => (\r\n                                    <tbody key={songs.uuid}>\r\n                                    \r\n                                        <td>{songs.name}</td>\r\n                                        <td>{songs.artist.name}</td>\r\n                                        <td>{songs.album}</td>\r\n                                        <td>{songs.duration}</td>\r\n                                        <td><AddCircleIcon onClick={(e) => handleAddMusic(e, songs)} color=\"secondary\"/></td>\r\n                                    </tbody>\r\n                                ))}\r\n                            </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                {/* tu playlist container */}\r\n                <div className=\"container my-5\">\r\n                    <div className=\"col-lg your-ply-text \">\r\n                        <p className=\"search-yourPly text-left\">Tu playlist</p>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col-12\">Nombre</th>\r\n                                        <th scope=\"col-12\">Artista</th>\r\n                                        <th scope=\"col-12\">Álbum</th>\r\n                                        <th scope=\"col-12\">Duración</th>\r\n                                        <th scope=\"col-12\">Agregar</th>\r\n                                    </tr>\r\n                                </thead>\r\n                            </table>\r\n                                <ul>{}</ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        }else{\r\n            history.push(`/authError`)\r\n        }\r\n\r\n}","import React from 'react';\nimport {Button} from '@material-ui/core';\nimport LoginForm from '../src/pages/login.js';\nimport {LoginHeader} from './components/loginHeader.js';\nimport {LoggedHeader} from './components/loggedHeader.js';\nimport ErrorAutentication from '../src/components/authError.js';\nimport {PlaylistCreator} from '../src/components/plyCreator.js';\n\nimport {HomePage} from '../src/pages/homePage';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n  useRouteMatch\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route path=\"/plyCreator/:uuid\"><HomePage/></Route>\n          <Route path=\"/authError\"><ErrorAutentication/></Route>\n           <Route path=\"/\"><LoginForm/></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../src/assets/styles/styles.css';\n/* ----------------------------------------------- */\n\n/* FONTAWSOME */\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n/* BOOSTRAP */\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}